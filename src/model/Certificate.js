/*
 * SeminarCatalog API
 * Rest API for SeminarCatalog Administration
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@databay.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 */

import {ApiClient} from '../ApiClient';

/**
 * The Certificate model module.
 * @module model/Certificate
 * @version 1.0.0
 */
export class Certificate {
  /**
   * Constructs a new <code>Certificate</code>.
   * @alias module:model/Certificate
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Certificate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Certificate} obj Optional instance to populate.
   * @return {module:model/Certificate} The populated <code>Certificate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Certificate();
      if (data.hasOwnProperty('_syncFields'))
        obj.syncFields = ApiClient.convertToType(data['_syncFields'], ['String']);
      if (data.hasOwnProperty('participation'))
        obj.participation = ApiClient.convertToType(data['participation'], 'Number');
      if (data.hasOwnProperty('placeholders'))
        obj.placeholders = ApiClient.convertToType(data['placeholders'], 'String');
      if (data.hasOwnProperty('template'))
        obj.template = ApiClient.convertToType(data['template'], 'String');
      if (data.hasOwnProperty('templatepath'))
        obj.templatepath = ApiClient.convertToType(data['templatepath'], 'String');
      if (data.hasOwnProperty('filecontent'))
        obj.filecontent = ApiClient.convertToType(data['filecontent'], 'String');
      if (data.hasOwnProperty('filepath'))
        obj.filepath = ApiClient.convertToType(data['filepath'], 'String');
      if (data.hasOwnProperty('code'))
        obj.code = ApiClient.convertToType(data['code'], 'String');
      if (data.hasOwnProperty('origin'))
        obj.origin = ApiClient.convertToType(data['origin'], 'Number');
      if (data.hasOwnProperty('exportDate'))
        obj.exportDate = ApiClient.convertToType(data['exportDate'], 'Number');
      if (data.hasOwnProperty('exportId'))
        obj.exportId = ApiClient.convertToType(data['exportId'], 'String');
      if (data.hasOwnProperty('expirationReminderSent'))
        obj.expirationReminderSent = ApiClient.convertToType(data['expirationReminderSent'], 'Number');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('foreignId'))
        obj.foreignId = ApiClient.convertToType(data['foreignId'], 'String');
      if (data.hasOwnProperty('language'))
        obj.language = ApiClient.convertToType(data['language'], 'Number');
      if (data.hasOwnProperty('createDate'))
        obj.createDate = ApiClient.convertToType(data['createDate'], 'Number');
      if (data.hasOwnProperty('changeDate'))
        obj.changeDate = ApiClient.convertToType(data['changeDate'], 'Number');
      if (data.hasOwnProperty('deleted'))
        obj.deleted = ApiClient.convertToType(data['deleted'], 'Number');
      if (data.hasOwnProperty('hidden'))
        obj.hidden = ApiClient.convertToType(data['hidden'], 'Number');
      if (data.hasOwnProperty('sorting'))
        obj.sorting = ApiClient.convertToType(data['sorting'], 'Number');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Array.<String>} syncFields
 */
Certificate.prototype.syncFields = undefined;

/**
 * @member {Number} participation
 */
Certificate.prototype.participation = undefined;

/**
 * @member {String} placeholders
 */
Certificate.prototype.placeholders = undefined;

/**
 * @member {String} template
 */
Certificate.prototype.template = undefined;

/**
 * @member {String} templatepath
 */
Certificate.prototype.templatepath = undefined;

/**
 * @member {String} filecontent
 */
Certificate.prototype.filecontent = undefined;

/**
 * @member {String} filepath
 */
Certificate.prototype.filepath = undefined;

/**
 * @member {String} code
 */
Certificate.prototype.code = undefined;

/**
 * @member {Number} origin
 */
Certificate.prototype.origin = undefined;

/**
 * @member {Number} exportDate
 */
Certificate.prototype.exportDate = undefined;

/**
 * @member {String} exportId
 */
Certificate.prototype.exportId = undefined;

/**
 * @member {Number} expirationReminderSent
 */
Certificate.prototype.expirationReminderSent = undefined;

/**
 * @member {Number} id
 */
Certificate.prototype.id = undefined;

/**
 * @member {String} foreignId
 */
Certificate.prototype.foreignId = undefined;

/**
 * @member {Number} language
 */
Certificate.prototype.language = undefined;

/**
 * @member {Number} createDate
 */
Certificate.prototype.createDate = undefined;

/**
 * @member {Number} changeDate
 */
Certificate.prototype.changeDate = undefined;

/**
 * @member {Number} deleted
 */
Certificate.prototype.deleted = undefined;

/**
 * @member {Number} hidden
 */
Certificate.prototype.hidden = undefined;

/**
 * @member {Number} sorting
 */
Certificate.prototype.sorting = undefined;

/**
 * @member {String} tags
 */
Certificate.prototype.tags = undefined;


