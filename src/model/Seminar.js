/*
 * SeminarCatalog API
 * Rest API for SeminarCatalog Administration
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@databay.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 */

import {ApiClient} from '../ApiClient';

/**
 * The Seminar model module.
 * @module model/Seminar
 * @version 1.0.0
 */
export class Seminar {
  /**
   * Constructs a new <code>Seminar</code>.
   * @alias module:model/Seminar
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Seminar</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Seminar} obj Optional instance to populate.
   * @return {module:model/Seminar} The populated <code>Seminar</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Seminar();
      if (data.hasOwnProperty('_syncFields'))
        obj.syncFields = ApiClient.convertToType(data['_syncFields'], ['String']);
      if (data.hasOwnProperty('identifier'))
        obj.identifier = ApiClient.convertToType(data['identifier'], 'String');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('subtitle'))
        obj.subtitle = ApiClient.convertToType(data['subtitle'], 'String');
      if (data.hasOwnProperty('teaser'))
        obj.teaser = ApiClient.convertToType(data['teaser'], 'String');
      if (data.hasOwnProperty('intro'))
        obj.intro = ApiClient.convertToType(data['intro'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('organizerInfo'))
        obj.organizerInfo = ApiClient.convertToType(data['organizerInfo'], 'String');
      if (data.hasOwnProperty('partnerInfo'))
        obj.partnerInfo = ApiClient.convertToType(data['partnerInfo'], 'String');
      if (data.hasOwnProperty('externalUrl'))
        obj.externalUrl = ApiClient.convertToType(data['externalUrl'], 'String');
      if (data.hasOwnProperty('trainerInfo'))
        obj.trainerInfo = ApiClient.convertToType(data['trainerInfo'], 'String');
      if (data.hasOwnProperty('contactDetails'))
        obj.contactDetails = ApiClient.convertToType(data['contactDetails'], 'String');
      if (data.hasOwnProperty('rolesVisibility'))
        obj.rolesVisibility = ApiClient.convertToType(data['rolesVisibility'], 'String');
      if (data.hasOwnProperty('rolesBooking'))
        obj.rolesBooking = ApiClient.convertToType(data['rolesBooking'], 'String');
      if (data.hasOwnProperty('birthdateRequired'))
        obj.birthdateRequired = ApiClient.convertToType(data['birthdateRequired'], 'Number');
      if (data.hasOwnProperty('birthplaceRequired'))
        obj.birthplaceRequired = ApiClient.convertToType(data['birthplaceRequired'], 'Number');
      if (data.hasOwnProperty('utNumberRequired'))
        obj.utNumberRequired = ApiClient.convertToType(data['utNumberRequired'], 'Number');
      if (data.hasOwnProperty('hideInCatalog'))
        obj.hideInCatalog = ApiClient.convertToType(data['hideInCatalog'], 'Number');
      if (data.hasOwnProperty('content'))
        obj.content = ApiClient.convertToType(data['content'], 'String');
      if (data.hasOwnProperty('targetGroupInfo'))
        obj.targetGroupInfo = ApiClient.convertToType(data['targetGroupInfo'], 'String');
      if (data.hasOwnProperty('requirements'))
        obj.requirements = ApiClient.convertToType(data['requirements'], 'String');
      if (data.hasOwnProperty('agenda'))
        obj.agenda = ApiClient.convertToType(data['agenda'], 'String');
      if (data.hasOwnProperty('hints'))
        obj.hints = ApiClient.convertToType(data['hints'], 'String');
      if (data.hasOwnProperty('qualification'))
        obj.qualification = ApiClient.convertToType(data['qualification'], 'String');
      if (data.hasOwnProperty('learningGoals'))
        obj.learningGoals = ApiClient.convertToType(data['learningGoals'], 'String');
      if (data.hasOwnProperty('cvIsRequired'))
        obj.cvIsRequired = ApiClient.convertToType(data['cvIsRequired'], 'Number');
      if (data.hasOwnProperty('coursePreparation'))
        obj.coursePreparation = ApiClient.convertToType(data['coursePreparation'], 'String');
      if (data.hasOwnProperty('certificateInfo'))
        obj.certificateInfo = ApiClient.convertToType(data['certificateInfo'], 'String');
      if (data.hasOwnProperty('instructorPotentialRole'))
        obj.instructorPotentialRole = ApiClient.convertToType(data['instructorPotentialRole'], 'Number');
      if (data.hasOwnProperty('certificateTemplate'))
        obj.certificateTemplate = ApiClient.convertToType(data['certificateTemplate'], 'String');
      if (data.hasOwnProperty('shippingInformation'))
        obj.shippingInformation = ApiClient.convertToType(data['shippingInformation'], 'String');
      if (data.hasOwnProperty('courseInformation1'))
        obj.courseInformation1 = ApiClient.convertToType(data['courseInformation1'], 'String');
      if (data.hasOwnProperty('courseInformation2'))
        obj.courseInformation2 = ApiClient.convertToType(data['courseInformation2'], 'String');
      if (data.hasOwnProperty('courseInformation3'))
        obj.courseInformation3 = ApiClient.convertToType(data['courseInformation3'], 'String');
      if (data.hasOwnProperty('hasCertificate'))
        obj.hasCertificate = ApiClient.convertToType(data['hasCertificate'], 'Boolean');
      if (data.hasOwnProperty('certNumberMonthsValid'))
        obj.certNumberMonthsValid = ApiClient.convertToType(data['certNumberMonthsValid'], 'Boolean');
      if (data.hasOwnProperty('certRespPrecondition'))
        obj.certRespPrecondition = ApiClient.convertToType(data['certRespPrecondition'], 'Number');
      if (data.hasOwnProperty('certRespCourse'))
        obj.certRespCourse = ApiClient.convertToType(data['certRespCourse'], 'Number');
      if (data.hasOwnProperty('certRespParticipation'))
        obj.certRespParticipation = ApiClient.convertToType(data['certRespParticipation'], 'Number');
      if (data.hasOwnProperty('certRespConfirmation'))
        obj.certRespConfirmation = ApiClient.convertToType(data['certRespConfirmation'], 'Number');
      if (data.hasOwnProperty('inPlanning'))
        obj.inPlanning = ApiClient.convertToType(data['inPlanning'], 'Number');
      if (data.hasOwnProperty('planningDescription'))
        obj.planningDescription = ApiClient.convertToType(data['planningDescription'], 'String');
      if (data.hasOwnProperty('bookableForInhouse'))
        obj.bookableForInhouse = ApiClient.convertToType(data['bookableForInhouse'], 'Number');
      if (data.hasOwnProperty('sendCertificateReminder'))
        obj.sendCertificateReminder = ApiClient.convertToType(data['sendCertificateReminder'], 'Number');
      if (data.hasOwnProperty('daysUntilCertReminder'))
        obj.daysUntilCertReminder = ApiClient.convertToType(data['daysUntilCertReminder'], 'Number');
      if (data.hasOwnProperty('monthsForCertExtend'))
        obj.monthsForCertExtend = ApiClient.convertToType(data['monthsForCertExtend'], 'Number');
      if (data.hasOwnProperty('certExtensionDate'))
        obj.certExtensionDate = ApiClient.convertToType(data['certExtensionDate'], 'Number');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('foreignId'))
        obj.foreignId = ApiClient.convertToType(data['foreignId'], 'String');
      if (data.hasOwnProperty('language'))
        obj.language = ApiClient.convertToType(data['language'], 'Number');
      if (data.hasOwnProperty('createDate'))
        obj.createDate = ApiClient.convertToType(data['createDate'], 'Number');
      if (data.hasOwnProperty('changeDate'))
        obj.changeDate = ApiClient.convertToType(data['changeDate'], 'Number');
      if (data.hasOwnProperty('deleted'))
        obj.deleted = ApiClient.convertToType(data['deleted'], 'Number');
      if (data.hasOwnProperty('hidden'))
        obj.hidden = ApiClient.convertToType(data['hidden'], 'Number');
      if (data.hasOwnProperty('sorting'))
        obj.sorting = ApiClient.convertToType(data['sorting'], 'Number');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Array.<String>} syncFields
 */
Seminar.prototype.syncFields = undefined;

/**
 * @member {String} identifier
 */
Seminar.prototype.identifier = undefined;

/**
 * @member {String} title
 */
Seminar.prototype.title = undefined;

/**
 * @member {String} subtitle
 */
Seminar.prototype.subtitle = undefined;

/**
 * @member {String} teaser
 */
Seminar.prototype.teaser = undefined;

/**
 * @member {String} intro
 */
Seminar.prototype.intro = undefined;

/**
 * @member {String} description
 */
Seminar.prototype.description = undefined;

/**
 * @member {String} type
 */
Seminar.prototype.type = undefined;

/**
 * @member {String} organizerInfo
 */
Seminar.prototype.organizerInfo = undefined;

/**
 * @member {String} partnerInfo
 */
Seminar.prototype.partnerInfo = undefined;

/**
 * @member {String} externalUrl
 */
Seminar.prototype.externalUrl = undefined;

/**
 * @member {String} trainerInfo
 */
Seminar.prototype.trainerInfo = undefined;

/**
 * @member {String} contactDetails
 */
Seminar.prototype.contactDetails = undefined;

/**
 * @member {String} rolesVisibility
 */
Seminar.prototype.rolesVisibility = undefined;

/**
 * @member {String} rolesBooking
 */
Seminar.prototype.rolesBooking = undefined;

/**
 * @member {Number} birthdateRequired
 */
Seminar.prototype.birthdateRequired = undefined;

/**
 * @member {Number} birthplaceRequired
 */
Seminar.prototype.birthplaceRequired = undefined;

/**
 * @member {Number} utNumberRequired
 */
Seminar.prototype.utNumberRequired = undefined;

/**
 * @member {Number} hideInCatalog
 */
Seminar.prototype.hideInCatalog = undefined;

/**
 * @member {String} content
 */
Seminar.prototype.content = undefined;

/**
 * @member {String} targetGroupInfo
 */
Seminar.prototype.targetGroupInfo = undefined;

/**
 * @member {String} requirements
 */
Seminar.prototype.requirements = undefined;

/**
 * @member {String} agenda
 */
Seminar.prototype.agenda = undefined;

/**
 * @member {String} hints
 */
Seminar.prototype.hints = undefined;

/**
 * @member {String} qualification
 */
Seminar.prototype.qualification = undefined;

/**
 * @member {String} learningGoals
 */
Seminar.prototype.learningGoals = undefined;

/**
 * @member {Number} cvIsRequired
 */
Seminar.prototype.cvIsRequired = undefined;

/**
 * @member {String} coursePreparation
 */
Seminar.prototype.coursePreparation = undefined;

/**
 * @member {String} certificateInfo
 */
Seminar.prototype.certificateInfo = undefined;

/**
 * @member {Number} instructorPotentialRole
 */
Seminar.prototype.instructorPotentialRole = undefined;

/**
 * @member {String} certificateTemplate
 */
Seminar.prototype.certificateTemplate = undefined;

/**
 * @member {String} shippingInformation
 */
Seminar.prototype.shippingInformation = undefined;

/**
 * @member {String} courseInformation1
 */
Seminar.prototype.courseInformation1 = undefined;

/**
 * @member {String} courseInformation2
 */
Seminar.prototype.courseInformation2 = undefined;

/**
 * @member {String} courseInformation3
 */
Seminar.prototype.courseInformation3 = undefined;

/**
 * @member {Boolean} hasCertificate
 */
Seminar.prototype.hasCertificate = undefined;

/**
 * @member {Boolean} certNumberMonthsValid
 */
Seminar.prototype.certNumberMonthsValid = undefined;

/**
 * @member {Number} certRespPrecondition
 */
Seminar.prototype.certRespPrecondition = undefined;

/**
 * @member {Number} certRespCourse
 */
Seminar.prototype.certRespCourse = undefined;

/**
 * @member {Number} certRespParticipation
 */
Seminar.prototype.certRespParticipation = undefined;

/**
 * @member {Number} certRespConfirmation
 */
Seminar.prototype.certRespConfirmation = undefined;

/**
 * @member {Number} inPlanning
 */
Seminar.prototype.inPlanning = undefined;

/**
 * @member {String} planningDescription
 */
Seminar.prototype.planningDescription = undefined;

/**
 * @member {Number} bookableForInhouse
 */
Seminar.prototype.bookableForInhouse = undefined;

/**
 * @member {Number} sendCertificateReminder
 */
Seminar.prototype.sendCertificateReminder = undefined;

/**
 * @member {Number} daysUntilCertReminder
 */
Seminar.prototype.daysUntilCertReminder = undefined;

/**
 * @member {Number} monthsForCertExtend
 */
Seminar.prototype.monthsForCertExtend = undefined;

/**
 * @member {Number} certExtensionDate
 */
Seminar.prototype.certExtensionDate = undefined;

/**
 * @member {Number} id
 */
Seminar.prototype.id = undefined;

/**
 * @member {String} foreignId
 */
Seminar.prototype.foreignId = undefined;

/**
 * @member {Number} language
 */
Seminar.prototype.language = undefined;

/**
 * @member {Number} createDate
 */
Seminar.prototype.createDate = undefined;

/**
 * @member {Number} changeDate
 */
Seminar.prototype.changeDate = undefined;

/**
 * @member {Number} deleted
 */
Seminar.prototype.deleted = undefined;

/**
 * @member {Number} hidden
 */
Seminar.prototype.hidden = undefined;

/**
 * @member {Number} sorting
 */
Seminar.prototype.sorting = undefined;

/**
 * @member {String} tags
 */
Seminar.prototype.tags = undefined;


