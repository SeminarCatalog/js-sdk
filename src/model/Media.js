/*
 * SeminarCatalog API
 * Rest API for SeminarCatalog Administration
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@databay.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 */

import {ApiClient} from '../ApiClient';

/**
 * The Media model module.
 * @module model/Media
 * @version 1.0.0
 */
export class Media {
  /**
   * Constructs a new <code>Media</code>.
   * @alias module:model/Media
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Media</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Media} obj Optional instance to populate.
   * @return {module:model/Media} The populated <code>Media</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Media();
      if (data.hasOwnProperty('_syncFields'))
        obj.syncFields = ApiClient.convertToType(data['_syncFields'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('filepath'))
        obj.filepath = ApiClient.convertToType(data['filepath'], 'String');
      if (data.hasOwnProperty('filetype'))
        obj.filetype = ApiClient.convertToType(data['filetype'], 'String');
      if (data.hasOwnProperty('isDownload'))
        obj.isDownload = ApiClient.convertToType(data['isDownload'], 'Number');
      if (data.hasOwnProperty('isGlobal'))
        obj.isGlobal = ApiClient.convertToType(data['isGlobal'], 'Number');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('limitedVisibility'))
        obj.limitedVisibility = ApiClient.convertToType(data['limitedVisibility'], 'Number');
      if (data.hasOwnProperty('startDate'))
        obj.startDate = ApiClient.convertToType(data['startDate'], 'Number');
      if (data.hasOwnProperty('endDate'))
        obj.endDate = ApiClient.convertToType(data['endDate'], 'Number');
      if (data.hasOwnProperty('uploaderId'))
        obj.uploaderId = ApiClient.convertToType(data['uploaderId'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('foreignId'))
        obj.foreignId = ApiClient.convertToType(data['foreignId'], 'String');
      if (data.hasOwnProperty('language'))
        obj.language = ApiClient.convertToType(data['language'], 'Number');
      if (data.hasOwnProperty('createDate'))
        obj.createDate = ApiClient.convertToType(data['createDate'], 'Number');
      if (data.hasOwnProperty('changeDate'))
        obj.changeDate = ApiClient.convertToType(data['changeDate'], 'Number');
      if (data.hasOwnProperty('deleted'))
        obj.deleted = ApiClient.convertToType(data['deleted'], 'Number');
      if (data.hasOwnProperty('hidden'))
        obj.hidden = ApiClient.convertToType(data['hidden'], 'Number');
      if (data.hasOwnProperty('sorting'))
        obj.sorting = ApiClient.convertToType(data['sorting'], 'Number');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], 'String');
      if (data.hasOwnProperty('glyphicon'))
        obj.glyphicon = ApiClient.convertToType(data['glyphicon'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} syncFields
 */
Media.prototype.syncFields = undefined;

/**
 * @member {String} name
 */
Media.prototype.name = undefined;

/**
 * @member {String} url
 */
Media.prototype.url = undefined;

/**
 * @member {String} filepath
 */
Media.prototype.filepath = undefined;

/**
 * @member {String} filetype
 */
Media.prototype.filetype = undefined;

/**
 * @member {Number} isDownload
 */
Media.prototype.isDownload = undefined;

/**
 * @member {Number} isGlobal
 */
Media.prototype.isGlobal = undefined;

/**
 * @member {String} description
 */
Media.prototype.description = undefined;

/**
 * @member {Number} limitedVisibility
 */
Media.prototype.limitedVisibility = undefined;

/**
 * @member {Number} startDate
 */
Media.prototype.startDate = undefined;

/**
 * @member {Number} endDate
 */
Media.prototype.endDate = undefined;

/**
 * @member {String} uploaderId
 */
Media.prototype.uploaderId = undefined;

/**
 * @member {Number} id
 */
Media.prototype.id = undefined;

/**
 * @member {String} foreignId
 */
Media.prototype.foreignId = undefined;

/**
 * @member {Number} language
 */
Media.prototype.language = undefined;

/**
 * @member {Number} createDate
 */
Media.prototype.createDate = undefined;

/**
 * @member {Number} changeDate
 */
Media.prototype.changeDate = undefined;

/**
 * @member {Number} deleted
 */
Media.prototype.deleted = undefined;

/**
 * @member {Number} hidden
 */
Media.prototype.hidden = undefined;

/**
 * @member {Number} sorting
 */
Media.prototype.sorting = undefined;

/**
 * @member {String} tags
 */
Media.prototype.tags = undefined;

/**
 * @member {String} glyphicon
 */
Media.prototype.glyphicon = undefined;


