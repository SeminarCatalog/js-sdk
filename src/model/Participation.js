/*
 * SeminarCatalog API
 * Rest API for SeminarCatalog Administration
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@databay.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 */

import {ApiClient} from '../ApiClient';

/**
 * The Participation model module.
 * @module model/Participation
 * @version 1.0.0
 */
export class Participation {
  /**
   * Constructs a new <code>Participation</code>.
   * @alias module:model/Participation
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Participation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Participation} obj Optional instance to populate.
   * @return {module:model/Participation} The populated <code>Participation</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Participation();
      if (data.hasOwnProperty('seminar'))
        obj.seminar = ApiClient.convertToType(data['seminar'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'Number');
      if (data.hasOwnProperty('accommodation'))
        obj.accommodation = ApiClient.convertToType(data['accommodation'], 'Number');
      if (data.hasOwnProperty('confirmation'))
        obj.confirmation = ApiClient.convertToType(data['confirmation'], 'Number');
      if (data.hasOwnProperty('checkedParticipantData'))
        obj.checkedParticipantData = ApiClient.convertToType(data['checkedParticipantData'], 'Number');
      if (data.hasOwnProperty('faxReceived'))
        obj.faxReceived = ApiClient.convertToType(data['faxReceived'], 'Number');
      if (data.hasOwnProperty('faxFile'))
        obj.faxFile = ApiClient.convertToType(data['faxFile'], 'String');
      if (data.hasOwnProperty('learningFinished'))
        obj.learningFinished = ApiClient.convertToType(data['learningFinished'], 'Number');
      if (data.hasOwnProperty('exportedToList'))
        obj.exportedToList = ApiClient.convertToType(data['exportedToList'], 'Number');
      if (data.hasOwnProperty('hasCertificate'))
        obj.hasCertificate = ApiClient.convertToType(data['hasCertificate'], 'Number');
      if (data.hasOwnProperty('downloadCertificate'))
        obj.downloadCertificate = ApiClient.convertToType(data['downloadCertificate'], 'Number');
      if (data.hasOwnProperty('workingGroup'))
        obj.workingGroup = ApiClient.convertToType(data['workingGroup'], 'Number');
      if (data.hasOwnProperty('materialShippingDate'))
        obj.materialShippingDate = ApiClient.convertToType(data['materialShippingDate'], 'Number');
      if (data.hasOwnProperty('annotation'))
        obj.annotation = ApiClient.convertToType(data['annotation'], 'String');
      if (data.hasOwnProperty('attendance'))
        obj.attendance = ApiClient.convertToType(data['attendance'], 'Number');
      if (data.hasOwnProperty('attendanceDate'))
        obj.attendanceDate = ApiClient.convertToType(data['attendanceDate'], 'Number');
      if (data.hasOwnProperty('presentDays'))
        obj.presentDays = ApiClient.convertToType(data['presentDays'], 'Number');
      if (data.hasOwnProperty('hasInstructorPotential'))
        obj.hasInstructorPotential = ApiClient.convertToType(data['hasInstructorPotential'], 'Number');
      if (data.hasOwnProperty('firstReminderStatus'))
        obj.firstReminderStatus = ApiClient.convertToType(data['firstReminderStatus'], 'Number');
      if (data.hasOwnProperty('secondReminderStatus'))
        obj.secondReminderStatus = ApiClient.convertToType(data['secondReminderStatus'], 'Number');
      if (data.hasOwnProperty('thirdReminderStatus'))
        obj.thirdReminderStatus = ApiClient.convertToType(data['thirdReminderStatus'], 'Number');
      if (data.hasOwnProperty('certificateDate'))
        obj.certificateDate = ApiClient.convertToType(data['certificateDate'], 'Number');
      if (data.hasOwnProperty('instructorPotentialDate'))
        obj.instructorPotentialDate = ApiClient.convertToType(data['instructorPotentialDate'], 'Number');
      if (data.hasOwnProperty('document'))
        obj.document = ApiClient.convertToType(data['document'], 'String');
      if (data.hasOwnProperty('documentWhere'))
        obj.documentWhere = ApiClient.convertToType(data['documentWhere'], 'String');
      if (data.hasOwnProperty('documentDate'))
        obj.documentDate = ApiClient.convertToType(data['documentDate'], 'String');
      if (data.hasOwnProperty('requirementsFulfilled'))
        obj.requirementsFulfilled = ApiClient.convertToType(data['requirementsFulfilled'], 'Number');
      if (data.hasOwnProperty('hasManCertificate'))
        obj.hasManCertificate = ApiClient.convertToType(data['hasManCertificate'], 'Number');
      if (data.hasOwnProperty('enablingUser'))
        obj.enablingUser = ApiClient.convertToType(data['enablingUser'], 'Number');
      if (data.hasOwnProperty('enablingComment'))
        obj.enablingComment = ApiClient.convertToType(data['enablingComment'], 'Number');
      if (data.hasOwnProperty('blockedManCertificate'))
        obj.blockedManCertificate = ApiClient.convertToType(data['blockedManCertificate'], 'Number');
      if (data.hasOwnProperty('blockingUser'))
        obj.blockingUser = ApiClient.convertToType(data['blockingUser'], 'Number');
      if (data.hasOwnProperty('blockingDate'))
        obj.blockingDate = ApiClient.convertToType(data['blockingDate'], 'Number');
      if (data.hasOwnProperty('blockingComment'))
        obj.blockingComment = ApiClient.convertToType(data['blockingComment'], 'Number');
      if (data.hasOwnProperty('client'))
        obj.client = ApiClient.convertToType(data['client'], 'Number');
      if (data.hasOwnProperty('certBody'))
        obj.certBody = ApiClient.convertToType(data['certBody'], 'Number');
      if (data.hasOwnProperty('_syncFields'))
        obj.syncFields = ApiClient.convertToType(data['_syncFields'], ['String']);
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('foreignId'))
        obj.foreignId = ApiClient.convertToType(data['foreignId'], 'String');
      if (data.hasOwnProperty('language'))
        obj.language = ApiClient.convertToType(data['language'], 'Number');
      if (data.hasOwnProperty('createDate'))
        obj.createDate = ApiClient.convertToType(data['createDate'], 'Number');
      if (data.hasOwnProperty('changeDate'))
        obj.changeDate = ApiClient.convertToType(data['changeDate'], 'Number');
      if (data.hasOwnProperty('deleted'))
        obj.deleted = ApiClient.convertToType(data['deleted'], 'Number');
      if (data.hasOwnProperty('hidden'))
        obj.hidden = ApiClient.convertToType(data['hidden'], 'Number');
      if (data.hasOwnProperty('sorting'))
        obj.sorting = ApiClient.convertToType(data['sorting'], 'Number');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Number} seminar
 */
Participation.prototype.seminar = undefined;

/**
 * @member {Number} status
 */
Participation.prototype.status = undefined;

/**
 * @member {Number} accommodation
 */
Participation.prototype.accommodation = undefined;

/**
 * @member {Number} confirmation
 */
Participation.prototype.confirmation = undefined;

/**
 * @member {Number} checkedParticipantData
 */
Participation.prototype.checkedParticipantData = undefined;

/**
 * @member {Number} faxReceived
 */
Participation.prototype.faxReceived = undefined;

/**
 * @member {String} faxFile
 */
Participation.prototype.faxFile = undefined;

/**
 * @member {Number} learningFinished
 */
Participation.prototype.learningFinished = undefined;

/**
 * @member {Number} exportedToList
 */
Participation.prototype.exportedToList = undefined;

/**
 * @member {Number} hasCertificate
 */
Participation.prototype.hasCertificate = undefined;

/**
 * @member {Number} downloadCertificate
 */
Participation.prototype.downloadCertificate = undefined;

/**
 * @member {Number} workingGroup
 */
Participation.prototype.workingGroup = undefined;

/**
 * @member {Number} materialShippingDate
 */
Participation.prototype.materialShippingDate = undefined;

/**
 * @member {String} annotation
 */
Participation.prototype.annotation = undefined;

/**
 * @member {Number} attendance
 */
Participation.prototype.attendance = undefined;

/**
 * @member {Number} attendanceDate
 */
Participation.prototype.attendanceDate = undefined;

/**
 * @member {Number} presentDays
 */
Participation.prototype.presentDays = undefined;

/**
 * @member {Number} hasInstructorPotential
 */
Participation.prototype.hasInstructorPotential = undefined;

/**
 * @member {Number} firstReminderStatus
 */
Participation.prototype.firstReminderStatus = undefined;

/**
 * @member {Number} secondReminderStatus
 */
Participation.prototype.secondReminderStatus = undefined;

/**
 * @member {Number} thirdReminderStatus
 */
Participation.prototype.thirdReminderStatus = undefined;

/**
 * @member {Number} certificateDate
 */
Participation.prototype.certificateDate = undefined;

/**
 * @member {Number} instructorPotentialDate
 */
Participation.prototype.instructorPotentialDate = undefined;

/**
 * @member {String} document
 */
Participation.prototype.document = undefined;

/**
 * @member {String} documentWhere
 */
Participation.prototype.documentWhere = undefined;

/**
 * @member {String} documentDate
 */
Participation.prototype.documentDate = undefined;

/**
 * @member {Number} requirementsFulfilled
 */
Participation.prototype.requirementsFulfilled = undefined;

/**
 * @member {Number} hasManCertificate
 */
Participation.prototype.hasManCertificate = undefined;

/**
 * @member {Number} enablingUser
 */
Participation.prototype.enablingUser = undefined;

/**
 * @member {Number} enablingComment
 */
Participation.prototype.enablingComment = undefined;

/**
 * @member {Number} blockedManCertificate
 */
Participation.prototype.blockedManCertificate = undefined;

/**
 * @member {Number} blockingUser
 */
Participation.prototype.blockingUser = undefined;

/**
 * @member {Number} blockingDate
 */
Participation.prototype.blockingDate = undefined;

/**
 * @member {Number} blockingComment
 */
Participation.prototype.blockingComment = undefined;

/**
 * @member {Number} client
 */
Participation.prototype.client = undefined;

/**
 * @member {Number} certBody
 */
Participation.prototype.certBody = undefined;

/**
 * @member {Array.<String>} syncFields
 */
Participation.prototype.syncFields = undefined;

/**
 * @member {Number} id
 */
Participation.prototype.id = undefined;

/**
 * @member {String} foreignId
 */
Participation.prototype.foreignId = undefined;

/**
 * @member {Number} language
 */
Participation.prototype.language = undefined;

/**
 * @member {Number} createDate
 */
Participation.prototype.createDate = undefined;

/**
 * @member {Number} changeDate
 */
Participation.prototype.changeDate = undefined;

/**
 * @member {Number} deleted
 */
Participation.prototype.deleted = undefined;

/**
 * @member {Number} hidden
 */
Participation.prototype.hidden = undefined;

/**
 * @member {Number} sorting
 */
Participation.prototype.sorting = undefined;

/**
 * @member {String} tags
 */
Participation.prototype.tags = undefined;


