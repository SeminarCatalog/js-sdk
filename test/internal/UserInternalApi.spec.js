/*
 * SeminarCatalog API
 * Rest API for SeminarCatalog Administration
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@databay.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SeminarCatalogApi);
  }
}(this, function(expect, SeminarCatalogApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SeminarCatalogApi.UserInternalApi();
  });

  describe('(package)', function() {
    describe('UserInternalApi', function() {
      describe('userCreate', function() {
        it('should call userCreate successfully', function(done) {
          // TODO: uncomment userCreate call and complete the assertions
          /*

          instance.userCreate().then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SeminarCatalogApi.User);
            {
              let dataCtr = data.syncFields;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                // expect(data).to.be("");
              }
            }
            expect(data.usrId).to.be.a('number');
            // expect(data.usrId).to.be(0);
            expect(data.active).to.be.a('number');
            // expect(data.active).to.be(0);
            expect(data.login).to.be.a('string');
            // expect(data.login).to.be("");
            expect(data.firstname).to.be.a('string');
            // expect(data.firstname).to.be("");
            expect(data.lastname).to.be.a('string');
            // expect(data.lastname).to.be("");
            expect(data.title).to.be.a('string');
            // expect(data.title).to.be("");
            expect(data.gender).to.be.a('string');
            // expect(data.gender).to.be("");
            expect(data.email).to.be.a('string');
            // expect(data.email).to.be("");
            expect(data.institution).to.be.a('string');
            // expect(data.institution).to.be("");
            expect(data.department).to.be.a('string');
            // expect(data.department).to.be("");
            expect(data.street).to.be.a('string');
            // expect(data.street).to.be("");
            expect(data.zipcode).to.be.a('string');
            // expect(data.zipcode).to.be("");
            expect(data.city).to.be.a('string');
            // expect(data.city).to.be("");
            expect(data.country).to.be.a('string');
            // expect(data.country).to.be("");
            expect(data.phoneHome).to.be.a('string');
            // expect(data.phoneHome).to.be("");
            expect(data.phoneMobile).to.be.a('string');
            // expect(data.phoneMobile).to.be("");
            expect(data.phoneOffice).to.be.a('string');
            // expect(data.phoneOffice).to.be("");
            expect(data.fax).to.be.a('string');
            // expect(data.fax).to.be("");
            expect(data.matriculation).to.be.a('string');
            // expect(data.matriculation).to.be("");
            expect(data.selCountry).to.be.a('string');
            // expect(data.selCountry).to.be("");
            expect(data.selCountryOffice).to.be.a('string');
            // expect(data.selCountryOffice).to.be("");
            expect(data.trainingYears).to.be.a('number');
            // expect(data.trainingYears).to.be(0);
            expect(data.position).to.be.a('string');
            // expect(data.position).to.be("");
            expect(data.positionYears).to.be.a('number');
            // expect(data.positionYears).to.be(0);
            expect(data.emailOffice).to.be.a('string');
            // expect(data.emailOffice).to.be("");
            expect(data.faxOffice).to.be.a('string');
            // expect(data.faxOffice).to.be("");
            expect(data.phoneMobileOffice).to.be.a('string');
            // expect(data.phoneMobileOffice).to.be("");
            expect(data.birthPlace).to.be.a('string');
            // expect(data.birthPlace).to.be("");
            expect(data.customerNumber).to.be.a('string');
            // expect(data.customerNumber).to.be("");
            expect(data.sessionId).to.be.a('string');
            // expect(data.sessionId).to.be("");
            expect(data.graduationYear).to.be.a('number');
            // expect(data.graduationYear).to.be(0);
            expect(data.finalDegreeYear).to.be.a('number');
            // expect(data.finalDegreeYear).to.be(0);
            expect(data.university).to.be.a('string');
            // expect(data.university).to.be("");
            expect(data.education).to.be.a('string');
            // expect(data.education).to.be("");
            expect(data.doctorateYear).to.be.a('number');
            // expect(data.doctorateYear).to.be(0);
            expect(data.specialization).to.be.a('string');
            // expect(data.specialization).to.be("");
            expect(data.specializationDate).to.be.a('string');
            // expect(data.specializationDate).to.be("");
            expect(data.associations).to.be.a('string');
            // expect(data.associations).to.be("");
            expect(data.associationOthers).to.be.a('string');
            // expect(data.associationOthers).to.be("");
            expect(data.careOf).to.be.a('string');
            // expect(data.careOf).to.be("");
            expect(data.degree).to.be.a('string');
            // expect(data.degree).to.be("");
            expect(data.role).to.be.a('number');
            // expect(data.role).to.be(0);
            expect(data.contactAddress).to.be.a('number');
            // expect(data.contactAddress).to.be(0);
            expect(data.company2).to.be.a('string');
            // expect(data.company2).to.be("");
            expect(data.streetOffice).to.be.a('string');
            // expect(data.streetOffice).to.be("");
            expect(data.zipcodeOffice).to.be.a('string');
            // expect(data.zipcodeOffice).to.be("");
            expect(data.cityOffice).to.be.a('string');
            // expect(data.cityOffice).to.be("");
            expect(data.countryOffice).to.be.a('string');
            // expect(data.countryOffice).to.be("");
            expect(data.debtorNumber).to.be.a('string');
            // expect(data.debtorNumber).to.be("");
            expect(data.publicFields).to.be.a('string');
            // expect(data.publicFields).to.be("");
            expect(data.userType).to.be.a('number');
            // expect(data.userType).to.be(0);
            expect(data.changeEmail).to.be.a('string');
            // expect(data.changeEmail).to.be("");
            expect(data.disabled).to.be.a('number');
            // expect(data.disabled).to.be(0);
            expect(data.remarks).to.be.a('string');
            // expect(data.remarks).to.be("");
            expect(data.uniformTrainingNumber).to.be.a('string');
            // expect(data.uniformTrainingNumber).to.be("");
            expect(data.notificationTechnical).to.be.a('number');
            // expect(data.notificationTechnical).to.be(0);
            expect(data.notificationNewsletter).to.be.a('number');
            // expect(data.notificationNewsletter).to.be(0);
            expect(data.ownAffiliateCode).to.be.a('string');
            // expect(data.ownAffiliateCode).to.be("");
            expect(data.advertiserAffiliateCode).to.be.a('string');
            // expect(data.advertiserAffiliateCode).to.be("");
            expect(data.advertiserAfCodeValidation).to.be.a('number');
            // expect(data.advertiserAfCodeValidation).to.be(0);
            expect(data.isAffiliateCodeAuthorized).to.be.a('number');
            // expect(data.isAffiliateCodeAuthorized).to.be(0);
            expect(data.isAffiliateCodeRequested).to.be.a('number');
            // expect(data.isAffiliateCodeRequested).to.be(0);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('userDelete', function() {
        it('should call userDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for userDelete call and complete the assertions
          /*
          var id = 56;

          instance.userDelete(id).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SeminarCatalogApi.User);
            {
              let dataCtr = data.syncFields;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                // expect(data).to.be("");
              }
            }
            expect(data.usrId).to.be.a('number');
            // expect(data.usrId).to.be(0);
            expect(data.active).to.be.a('number');
            // expect(data.active).to.be(0);
            expect(data.login).to.be.a('string');
            // expect(data.login).to.be("");
            expect(data.firstname).to.be.a('string');
            // expect(data.firstname).to.be("");
            expect(data.lastname).to.be.a('string');
            // expect(data.lastname).to.be("");
            expect(data.title).to.be.a('string');
            // expect(data.title).to.be("");
            expect(data.gender).to.be.a('string');
            // expect(data.gender).to.be("");
            expect(data.email).to.be.a('string');
            // expect(data.email).to.be("");
            expect(data.institution).to.be.a('string');
            // expect(data.institution).to.be("");
            expect(data.department).to.be.a('string');
            // expect(data.department).to.be("");
            expect(data.street).to.be.a('string');
            // expect(data.street).to.be("");
            expect(data.zipcode).to.be.a('string');
            // expect(data.zipcode).to.be("");
            expect(data.city).to.be.a('string');
            // expect(data.city).to.be("");
            expect(data.country).to.be.a('string');
            // expect(data.country).to.be("");
            expect(data.phoneHome).to.be.a('string');
            // expect(data.phoneHome).to.be("");
            expect(data.phoneMobile).to.be.a('string');
            // expect(data.phoneMobile).to.be("");
            expect(data.phoneOffice).to.be.a('string');
            // expect(data.phoneOffice).to.be("");
            expect(data.fax).to.be.a('string');
            // expect(data.fax).to.be("");
            expect(data.matriculation).to.be.a('string');
            // expect(data.matriculation).to.be("");
            expect(data.selCountry).to.be.a('string');
            // expect(data.selCountry).to.be("");
            expect(data.selCountryOffice).to.be.a('string');
            // expect(data.selCountryOffice).to.be("");
            expect(data.trainingYears).to.be.a('number');
            // expect(data.trainingYears).to.be(0);
            expect(data.position).to.be.a('string');
            // expect(data.position).to.be("");
            expect(data.positionYears).to.be.a('number');
            // expect(data.positionYears).to.be(0);
            expect(data.emailOffice).to.be.a('string');
            // expect(data.emailOffice).to.be("");
            expect(data.faxOffice).to.be.a('string');
            // expect(data.faxOffice).to.be("");
            expect(data.phoneMobileOffice).to.be.a('string');
            // expect(data.phoneMobileOffice).to.be("");
            expect(data.birthPlace).to.be.a('string');
            // expect(data.birthPlace).to.be("");
            expect(data.customerNumber).to.be.a('string');
            // expect(data.customerNumber).to.be("");
            expect(data.sessionId).to.be.a('string');
            // expect(data.sessionId).to.be("");
            expect(data.graduationYear).to.be.a('number');
            // expect(data.graduationYear).to.be(0);
            expect(data.finalDegreeYear).to.be.a('number');
            // expect(data.finalDegreeYear).to.be(0);
            expect(data.university).to.be.a('string');
            // expect(data.university).to.be("");
            expect(data.education).to.be.a('string');
            // expect(data.education).to.be("");
            expect(data.doctorateYear).to.be.a('number');
            // expect(data.doctorateYear).to.be(0);
            expect(data.specialization).to.be.a('string');
            // expect(data.specialization).to.be("");
            expect(data.specializationDate).to.be.a('string');
            // expect(data.specializationDate).to.be("");
            expect(data.associations).to.be.a('string');
            // expect(data.associations).to.be("");
            expect(data.associationOthers).to.be.a('string');
            // expect(data.associationOthers).to.be("");
            expect(data.careOf).to.be.a('string');
            // expect(data.careOf).to.be("");
            expect(data.degree).to.be.a('string');
            // expect(data.degree).to.be("");
            expect(data.role).to.be.a('number');
            // expect(data.role).to.be(0);
            expect(data.contactAddress).to.be.a('number');
            // expect(data.contactAddress).to.be(0);
            expect(data.company2).to.be.a('string');
            // expect(data.company2).to.be("");
            expect(data.streetOffice).to.be.a('string');
            // expect(data.streetOffice).to.be("");
            expect(data.zipcodeOffice).to.be.a('string');
            // expect(data.zipcodeOffice).to.be("");
            expect(data.cityOffice).to.be.a('string');
            // expect(data.cityOffice).to.be("");
            expect(data.countryOffice).to.be.a('string');
            // expect(data.countryOffice).to.be("");
            expect(data.debtorNumber).to.be.a('string');
            // expect(data.debtorNumber).to.be("");
            expect(data.publicFields).to.be.a('string');
            // expect(data.publicFields).to.be("");
            expect(data.userType).to.be.a('number');
            // expect(data.userType).to.be(0);
            expect(data.changeEmail).to.be.a('string');
            // expect(data.changeEmail).to.be("");
            expect(data.disabled).to.be.a('number');
            // expect(data.disabled).to.be(0);
            expect(data.remarks).to.be.a('string');
            // expect(data.remarks).to.be("");
            expect(data.uniformTrainingNumber).to.be.a('string');
            // expect(data.uniformTrainingNumber).to.be("");
            expect(data.notificationTechnical).to.be.a('number');
            // expect(data.notificationTechnical).to.be(0);
            expect(data.notificationNewsletter).to.be.a('number');
            // expect(data.notificationNewsletter).to.be(0);
            expect(data.ownAffiliateCode).to.be.a('string');
            // expect(data.ownAffiliateCode).to.be("");
            expect(data.advertiserAffiliateCode).to.be.a('string');
            // expect(data.advertiserAffiliateCode).to.be("");
            expect(data.advertiserAfCodeValidation).to.be.a('number');
            // expect(data.advertiserAfCodeValidation).to.be(0);
            expect(data.isAffiliateCodeAuthorized).to.be.a('number');
            // expect(data.isAffiliateCodeAuthorized).to.be(0);
            expect(data.isAffiliateCodeRequested).to.be.a('number');
            // expect(data.isAffiliateCodeRequested).to.be(0);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('userGet', function() {
        it('should call userGet successfully', function(done) {
          // TODO: uncomment, update parameter values for userGet call and complete the assertions
          /*
          var id = 56;

          instance.userGet(id).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SeminarCatalogApi.User);
            {
              let dataCtr = data.syncFields;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                // expect(data).to.be("");
              }
            }
            expect(data.usrId).to.be.a('number');
            // expect(data.usrId).to.be(0);
            expect(data.active).to.be.a('number');
            // expect(data.active).to.be(0);
            expect(data.login).to.be.a('string');
            // expect(data.login).to.be("");
            expect(data.firstname).to.be.a('string');
            // expect(data.firstname).to.be("");
            expect(data.lastname).to.be.a('string');
            // expect(data.lastname).to.be("");
            expect(data.title).to.be.a('string');
            // expect(data.title).to.be("");
            expect(data.gender).to.be.a('string');
            // expect(data.gender).to.be("");
            expect(data.email).to.be.a('string');
            // expect(data.email).to.be("");
            expect(data.institution).to.be.a('string');
            // expect(data.institution).to.be("");
            expect(data.department).to.be.a('string');
            // expect(data.department).to.be("");
            expect(data.street).to.be.a('string');
            // expect(data.street).to.be("");
            expect(data.zipcode).to.be.a('string');
            // expect(data.zipcode).to.be("");
            expect(data.city).to.be.a('string');
            // expect(data.city).to.be("");
            expect(data.country).to.be.a('string');
            // expect(data.country).to.be("");
            expect(data.phoneHome).to.be.a('string');
            // expect(data.phoneHome).to.be("");
            expect(data.phoneMobile).to.be.a('string');
            // expect(data.phoneMobile).to.be("");
            expect(data.phoneOffice).to.be.a('string');
            // expect(data.phoneOffice).to.be("");
            expect(data.fax).to.be.a('string');
            // expect(data.fax).to.be("");
            expect(data.matriculation).to.be.a('string');
            // expect(data.matriculation).to.be("");
            expect(data.selCountry).to.be.a('string');
            // expect(data.selCountry).to.be("");
            expect(data.selCountryOffice).to.be.a('string');
            // expect(data.selCountryOffice).to.be("");
            expect(data.trainingYears).to.be.a('number');
            // expect(data.trainingYears).to.be(0);
            expect(data.position).to.be.a('string');
            // expect(data.position).to.be("");
            expect(data.positionYears).to.be.a('number');
            // expect(data.positionYears).to.be(0);
            expect(data.emailOffice).to.be.a('string');
            // expect(data.emailOffice).to.be("");
            expect(data.faxOffice).to.be.a('string');
            // expect(data.faxOffice).to.be("");
            expect(data.phoneMobileOffice).to.be.a('string');
            // expect(data.phoneMobileOffice).to.be("");
            expect(data.birthPlace).to.be.a('string');
            // expect(data.birthPlace).to.be("");
            expect(data.customerNumber).to.be.a('string');
            // expect(data.customerNumber).to.be("");
            expect(data.sessionId).to.be.a('string');
            // expect(data.sessionId).to.be("");
            expect(data.graduationYear).to.be.a('number');
            // expect(data.graduationYear).to.be(0);
            expect(data.finalDegreeYear).to.be.a('number');
            // expect(data.finalDegreeYear).to.be(0);
            expect(data.university).to.be.a('string');
            // expect(data.university).to.be("");
            expect(data.education).to.be.a('string');
            // expect(data.education).to.be("");
            expect(data.doctorateYear).to.be.a('number');
            // expect(data.doctorateYear).to.be(0);
            expect(data.specialization).to.be.a('string');
            // expect(data.specialization).to.be("");
            expect(data.specializationDate).to.be.a('string');
            // expect(data.specializationDate).to.be("");
            expect(data.associations).to.be.a('string');
            // expect(data.associations).to.be("");
            expect(data.associationOthers).to.be.a('string');
            // expect(data.associationOthers).to.be("");
            expect(data.careOf).to.be.a('string');
            // expect(data.careOf).to.be("");
            expect(data.degree).to.be.a('string');
            // expect(data.degree).to.be("");
            expect(data.role).to.be.a('number');
            // expect(data.role).to.be(0);
            expect(data.contactAddress).to.be.a('number');
            // expect(data.contactAddress).to.be(0);
            expect(data.company2).to.be.a('string');
            // expect(data.company2).to.be("");
            expect(data.streetOffice).to.be.a('string');
            // expect(data.streetOffice).to.be("");
            expect(data.zipcodeOffice).to.be.a('string');
            // expect(data.zipcodeOffice).to.be("");
            expect(data.cityOffice).to.be.a('string');
            // expect(data.cityOffice).to.be("");
            expect(data.countryOffice).to.be.a('string');
            // expect(data.countryOffice).to.be("");
            expect(data.debtorNumber).to.be.a('string');
            // expect(data.debtorNumber).to.be("");
            expect(data.publicFields).to.be.a('string');
            // expect(data.publicFields).to.be("");
            expect(data.userType).to.be.a('number');
            // expect(data.userType).to.be(0);
            expect(data.changeEmail).to.be.a('string');
            // expect(data.changeEmail).to.be("");
            expect(data.disabled).to.be.a('number');
            // expect(data.disabled).to.be(0);
            expect(data.remarks).to.be.a('string');
            // expect(data.remarks).to.be("");
            expect(data.uniformTrainingNumber).to.be.a('string');
            // expect(data.uniformTrainingNumber).to.be("");
            expect(data.notificationTechnical).to.be.a('number');
            // expect(data.notificationTechnical).to.be(0);
            expect(data.notificationNewsletter).to.be.a('number');
            // expect(data.notificationNewsletter).to.be(0);
            expect(data.ownAffiliateCode).to.be.a('string');
            // expect(data.ownAffiliateCode).to.be("");
            expect(data.advertiserAffiliateCode).to.be.a('string');
            // expect(data.advertiserAffiliateCode).to.be("");
            expect(data.advertiserAfCodeValidation).to.be.a('number');
            // expect(data.advertiserAfCodeValidation).to.be(0);
            expect(data.isAffiliateCodeAuthorized).to.be.a('number');
            // expect(data.isAffiliateCodeAuthorized).to.be(0);
            expect(data.isAffiliateCodeRequested).to.be.a('number');
            // expect(data.isAffiliateCodeRequested).to.be(0);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('userList', function() {
        it('should call userList successfully', function(done) {
          // TODO: uncomment userList call and complete the assertions
          /*

          instance.userList().then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SeminarCatalogApi.UserPaginationResult);
            expect(data.limit).to.be.a('number');
            // expect(data.limit).to.be(0);
            expect(data.offset).to.be.a('number');
            // expect(data.offset).to.be(0);
            expect(data.entryCount).to.be.a('number');
            // expect(data.entryCount).to.be(0);
            expect(data.maxEntryCount).to.be.a('number');
            // expect(data.maxEntryCount).to.be(0);
            {
              let dataCtr = data.entries;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(SeminarCatalogApi.User);
                {
                  let dataCtr = data.syncFields;
                  expect(dataCtr).to.be.an(Array);
                  expect(dataCtr).to.not.be.empty();
                  for (let p in dataCtr) {
                    let data = dataCtr[p];
                    expect(data).to.be.a('string');
                    // expect(data).to.be("");
                  }
                }
                expect(data.usrId).to.be.a('number');
                // expect(data.usrId).to.be(0);
                expect(data.active).to.be.a('number');
                // expect(data.active).to.be(0);
                expect(data.login).to.be.a('string');
                // expect(data.login).to.be("");
                expect(data.firstname).to.be.a('string');
                // expect(data.firstname).to.be("");
                expect(data.lastname).to.be.a('string');
                // expect(data.lastname).to.be("");
                expect(data.title).to.be.a('string');
                // expect(data.title).to.be("");
                expect(data.gender).to.be.a('string');
                // expect(data.gender).to.be("");
                expect(data.email).to.be.a('string');
                // expect(data.email).to.be("");
                expect(data.institution).to.be.a('string');
                // expect(data.institution).to.be("");
                expect(data.department).to.be.a('string');
                // expect(data.department).to.be("");
                expect(data.street).to.be.a('string');
                // expect(data.street).to.be("");
                expect(data.zipcode).to.be.a('string');
                // expect(data.zipcode).to.be("");
                expect(data.city).to.be.a('string');
                // expect(data.city).to.be("");
                expect(data.country).to.be.a('string');
                // expect(data.country).to.be("");
                expect(data.phoneHome).to.be.a('string');
                // expect(data.phoneHome).to.be("");
                expect(data.phoneMobile).to.be.a('string');
                // expect(data.phoneMobile).to.be("");
                expect(data.phoneOffice).to.be.a('string');
                // expect(data.phoneOffice).to.be("");
                expect(data.fax).to.be.a('string');
                // expect(data.fax).to.be("");
                expect(data.matriculation).to.be.a('string');
                // expect(data.matriculation).to.be("");
                expect(data.selCountry).to.be.a('string');
                // expect(data.selCountry).to.be("");
                expect(data.selCountryOffice).to.be.a('string');
                // expect(data.selCountryOffice).to.be("");
                expect(data.trainingYears).to.be.a('number');
                // expect(data.trainingYears).to.be(0);
                expect(data.position).to.be.a('string');
                // expect(data.position).to.be("");
                expect(data.positionYears).to.be.a('number');
                // expect(data.positionYears).to.be(0);
                expect(data.emailOffice).to.be.a('string');
                // expect(data.emailOffice).to.be("");
                expect(data.faxOffice).to.be.a('string');
                // expect(data.faxOffice).to.be("");
                expect(data.phoneMobileOffice).to.be.a('string');
                // expect(data.phoneMobileOffice).to.be("");
                expect(data.birthPlace).to.be.a('string');
                // expect(data.birthPlace).to.be("");
                expect(data.customerNumber).to.be.a('string');
                // expect(data.customerNumber).to.be("");
                expect(data.sessionId).to.be.a('string');
                // expect(data.sessionId).to.be("");
                expect(data.graduationYear).to.be.a('number');
                // expect(data.graduationYear).to.be(0);
                expect(data.finalDegreeYear).to.be.a('number');
                // expect(data.finalDegreeYear).to.be(0);
                expect(data.university).to.be.a('string');
                // expect(data.university).to.be("");
                expect(data.education).to.be.a('string');
                // expect(data.education).to.be("");
                expect(data.doctorateYear).to.be.a('number');
                // expect(data.doctorateYear).to.be(0);
                expect(data.specialization).to.be.a('string');
                // expect(data.specialization).to.be("");
                expect(data.specializationDate).to.be.a('string');
                // expect(data.specializationDate).to.be("");
                expect(data.associations).to.be.a('string');
                // expect(data.associations).to.be("");
                expect(data.associationOthers).to.be.a('string');
                // expect(data.associationOthers).to.be("");
                expect(data.careOf).to.be.a('string');
                // expect(data.careOf).to.be("");
                expect(data.degree).to.be.a('string');
                // expect(data.degree).to.be("");
                expect(data.role).to.be.a('number');
                // expect(data.role).to.be(0);
                expect(data.contactAddress).to.be.a('number');
                // expect(data.contactAddress).to.be(0);
                expect(data.company2).to.be.a('string');
                // expect(data.company2).to.be("");
                expect(data.streetOffice).to.be.a('string');
                // expect(data.streetOffice).to.be("");
                expect(data.zipcodeOffice).to.be.a('string');
                // expect(data.zipcodeOffice).to.be("");
                expect(data.cityOffice).to.be.a('string');
                // expect(data.cityOffice).to.be("");
                expect(data.countryOffice).to.be.a('string');
                // expect(data.countryOffice).to.be("");
                expect(data.debtorNumber).to.be.a('string');
                // expect(data.debtorNumber).to.be("");
                expect(data.publicFields).to.be.a('string');
                // expect(data.publicFields).to.be("");
                expect(data.userType).to.be.a('number');
                // expect(data.userType).to.be(0);
                expect(data.changeEmail).to.be.a('string');
                // expect(data.changeEmail).to.be("");
                expect(data.disabled).to.be.a('number');
                // expect(data.disabled).to.be(0);
                expect(data.remarks).to.be.a('string');
                // expect(data.remarks).to.be("");
                expect(data.uniformTrainingNumber).to.be.a('string');
                // expect(data.uniformTrainingNumber).to.be("");
                expect(data.notificationTechnical).to.be.a('number');
                // expect(data.notificationTechnical).to.be(0);
                expect(data.notificationNewsletter).to.be.a('number');
                // expect(data.notificationNewsletter).to.be(0);
                expect(data.ownAffiliateCode).to.be.a('string');
                // expect(data.ownAffiliateCode).to.be("");
                expect(data.advertiserAffiliateCode).to.be.a('string');
                // expect(data.advertiserAffiliateCode).to.be("");
                expect(data.advertiserAfCodeValidation).to.be.a('number');
                // expect(data.advertiserAfCodeValidation).to.be(0);
                expect(data.isAffiliateCodeAuthorized).to.be.a('number');
                // expect(data.isAffiliateCodeAuthorized).to.be(0);
                expect(data.isAffiliateCodeRequested).to.be.a('number');
                // expect(data.isAffiliateCodeRequested).to.be(0);
              }
            }

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('userUpdate', function() {
        it('should call userUpdate successfully', function(done) {
          // TODO: uncomment, update parameter values for userUpdate call and complete the assertions
          /*
          var id = 56;

          instance.userUpdate(id).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SeminarCatalogApi.User);
            {
              let dataCtr = data.syncFields;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                // expect(data).to.be("");
              }
            }
            expect(data.usrId).to.be.a('number');
            // expect(data.usrId).to.be(0);
            expect(data.active).to.be.a('number');
            // expect(data.active).to.be(0);
            expect(data.login).to.be.a('string');
            // expect(data.login).to.be("");
            expect(data.firstname).to.be.a('string');
            // expect(data.firstname).to.be("");
            expect(data.lastname).to.be.a('string');
            // expect(data.lastname).to.be("");
            expect(data.title).to.be.a('string');
            // expect(data.title).to.be("");
            expect(data.gender).to.be.a('string');
            // expect(data.gender).to.be("");
            expect(data.email).to.be.a('string');
            // expect(data.email).to.be("");
            expect(data.institution).to.be.a('string');
            // expect(data.institution).to.be("");
            expect(data.department).to.be.a('string');
            // expect(data.department).to.be("");
            expect(data.street).to.be.a('string');
            // expect(data.street).to.be("");
            expect(data.zipcode).to.be.a('string');
            // expect(data.zipcode).to.be("");
            expect(data.city).to.be.a('string');
            // expect(data.city).to.be("");
            expect(data.country).to.be.a('string');
            // expect(data.country).to.be("");
            expect(data.phoneHome).to.be.a('string');
            // expect(data.phoneHome).to.be("");
            expect(data.phoneMobile).to.be.a('string');
            // expect(data.phoneMobile).to.be("");
            expect(data.phoneOffice).to.be.a('string');
            // expect(data.phoneOffice).to.be("");
            expect(data.fax).to.be.a('string');
            // expect(data.fax).to.be("");
            expect(data.matriculation).to.be.a('string');
            // expect(data.matriculation).to.be("");
            expect(data.selCountry).to.be.a('string');
            // expect(data.selCountry).to.be("");
            expect(data.selCountryOffice).to.be.a('string');
            // expect(data.selCountryOffice).to.be("");
            expect(data.trainingYears).to.be.a('number');
            // expect(data.trainingYears).to.be(0);
            expect(data.position).to.be.a('string');
            // expect(data.position).to.be("");
            expect(data.positionYears).to.be.a('number');
            // expect(data.positionYears).to.be(0);
            expect(data.emailOffice).to.be.a('string');
            // expect(data.emailOffice).to.be("");
            expect(data.faxOffice).to.be.a('string');
            // expect(data.faxOffice).to.be("");
            expect(data.phoneMobileOffice).to.be.a('string');
            // expect(data.phoneMobileOffice).to.be("");
            expect(data.birthPlace).to.be.a('string');
            // expect(data.birthPlace).to.be("");
            expect(data.customerNumber).to.be.a('string');
            // expect(data.customerNumber).to.be("");
            expect(data.sessionId).to.be.a('string');
            // expect(data.sessionId).to.be("");
            expect(data.graduationYear).to.be.a('number');
            // expect(data.graduationYear).to.be(0);
            expect(data.finalDegreeYear).to.be.a('number');
            // expect(data.finalDegreeYear).to.be(0);
            expect(data.university).to.be.a('string');
            // expect(data.university).to.be("");
            expect(data.education).to.be.a('string');
            // expect(data.education).to.be("");
            expect(data.doctorateYear).to.be.a('number');
            // expect(data.doctorateYear).to.be(0);
            expect(data.specialization).to.be.a('string');
            // expect(data.specialization).to.be("");
            expect(data.specializationDate).to.be.a('string');
            // expect(data.specializationDate).to.be("");
            expect(data.associations).to.be.a('string');
            // expect(data.associations).to.be("");
            expect(data.associationOthers).to.be.a('string');
            // expect(data.associationOthers).to.be("");
            expect(data.careOf).to.be.a('string');
            // expect(data.careOf).to.be("");
            expect(data.degree).to.be.a('string');
            // expect(data.degree).to.be("");
            expect(data.role).to.be.a('number');
            // expect(data.role).to.be(0);
            expect(data.contactAddress).to.be.a('number');
            // expect(data.contactAddress).to.be(0);
            expect(data.company2).to.be.a('string');
            // expect(data.company2).to.be("");
            expect(data.streetOffice).to.be.a('string');
            // expect(data.streetOffice).to.be("");
            expect(data.zipcodeOffice).to.be.a('string');
            // expect(data.zipcodeOffice).to.be("");
            expect(data.cityOffice).to.be.a('string');
            // expect(data.cityOffice).to.be("");
            expect(data.countryOffice).to.be.a('string');
            // expect(data.countryOffice).to.be("");
            expect(data.debtorNumber).to.be.a('string');
            // expect(data.debtorNumber).to.be("");
            expect(data.publicFields).to.be.a('string');
            // expect(data.publicFields).to.be("");
            expect(data.userType).to.be.a('number');
            // expect(data.userType).to.be(0);
            expect(data.changeEmail).to.be.a('string');
            // expect(data.changeEmail).to.be("");
            expect(data.disabled).to.be.a('number');
            // expect(data.disabled).to.be(0);
            expect(data.remarks).to.be.a('string');
            // expect(data.remarks).to.be("");
            expect(data.uniformTrainingNumber).to.be.a('string');
            // expect(data.uniformTrainingNumber).to.be("");
            expect(data.notificationTechnical).to.be.a('number');
            // expect(data.notificationTechnical).to.be(0);
            expect(data.notificationNewsletter).to.be.a('number');
            // expect(data.notificationNewsletter).to.be(0);
            expect(data.ownAffiliateCode).to.be.a('string');
            // expect(data.ownAffiliateCode).to.be("");
            expect(data.advertiserAffiliateCode).to.be.a('string');
            // expect(data.advertiserAffiliateCode).to.be("");
            expect(data.advertiserAfCodeValidation).to.be.a('number');
            // expect(data.advertiserAfCodeValidation).to.be(0);
            expect(data.isAffiliateCodeAuthorized).to.be.a('number');
            // expect(data.isAffiliateCodeAuthorized).to.be(0);
            expect(data.isAffiliateCodeRequested).to.be.a('number');
            // expect(data.isAffiliateCodeRequested).to.be(0);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
