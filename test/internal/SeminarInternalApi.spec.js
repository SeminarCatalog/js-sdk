/*
 * SeminarCatalog API
 * Rest API for SeminarCatalog Administration
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@databay.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SeminarCatalogApi);
  }
}(this, function(expect, SeminarCatalogApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SeminarCatalogApi.SeminarInternalApi();
  });

  describe('(package)', function() {
    describe('SeminarInternalApi', function() {
      describe('seminarCreate', function() {
        it('should call seminarCreate successfully', function(done) {
          // TODO: uncomment seminarCreate call and complete the assertions
          /*

          instance.seminarCreate().then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SeminarCatalogApi.Seminar);
            {
              let dataCtr = data.syncFields;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                // expect(data).to.be("");
              }
            }
            expect(data.identifier).to.be.a('string');
            // expect(data.identifier).to.be("");
            expect(data.title).to.be.a('string');
            // expect(data.title).to.be("");
            expect(data.subtitle).to.be.a('string');
            // expect(data.subtitle).to.be("");
            expect(data.teaser).to.be.a('string');
            // expect(data.teaser).to.be("");
            expect(data.intro).to.be.a('string');
            // expect(data.intro).to.be("");
            expect(data.description).to.be.a('string');
            // expect(data.description).to.be("");
            expect(data.type).to.be.a('string');
            // expect(data.type).to.be("");
            expect(data.organizerInfo).to.be.a('string');
            // expect(data.organizerInfo).to.be("");
            expect(data.partnerInfo).to.be.a('string');
            // expect(data.partnerInfo).to.be("");
            expect(data.externalUrl).to.be.a('string');
            // expect(data.externalUrl).to.be("");
            expect(data.trainerInfo).to.be.a('string');
            // expect(data.trainerInfo).to.be("");
            expect(data.contactDetails).to.be.a('string');
            // expect(data.contactDetails).to.be("");
            expect(data.rolesVisibility).to.be.a('string');
            // expect(data.rolesVisibility).to.be("");
            expect(data.rolesBooking).to.be.a('string');
            // expect(data.rolesBooking).to.be("");
            expect(data.birthdateRequired).to.be.a('number');
            // expect(data.birthdateRequired).to.be(0);
            expect(data.birthplaceRequired).to.be.a('number');
            // expect(data.birthplaceRequired).to.be(0);
            expect(data.utNumberRequired).to.be.a('number');
            // expect(data.utNumberRequired).to.be(0);
            expect(data.hideInCatalog).to.be.a('number');
            // expect(data.hideInCatalog).to.be(0);
            expect(data.content).to.be.a('string');
            // expect(data.content).to.be("");
            expect(data.targetGroupInfo).to.be.a('string');
            // expect(data.targetGroupInfo).to.be("");
            expect(data.requirements).to.be.a('string');
            // expect(data.requirements).to.be("");
            expect(data.agenda).to.be.a('string');
            // expect(data.agenda).to.be("");
            expect(data.hints).to.be.a('string');
            // expect(data.hints).to.be("");
            expect(data.qualification).to.be.a('string');
            // expect(data.qualification).to.be("");
            expect(data.learningGoals).to.be.a('string');
            // expect(data.learningGoals).to.be("");
            expect(data.cvIsRequired).to.be.a('number');
            // expect(data.cvIsRequired).to.be(0);
            expect(data.coursePreparation).to.be.a('string');
            // expect(data.coursePreparation).to.be("");
            expect(data.certificateInfo).to.be.a('string');
            // expect(data.certificateInfo).to.be("");
            expect(data.instructorPotentialRole).to.be.a('number');
            // expect(data.instructorPotentialRole).to.be(0);
            expect(data.certificateTemplate).to.be.a('string');
            // expect(data.certificateTemplate).to.be("");
            expect(data.shippingInformation).to.be.a('string');
            // expect(data.shippingInformation).to.be("");
            expect(data.courseInformation1).to.be.a('string');
            // expect(data.courseInformation1).to.be("");
            expect(data.courseInformation2).to.be.a('string');
            // expect(data.courseInformation2).to.be("");
            expect(data.courseInformation3).to.be.a('string');
            // expect(data.courseInformation3).to.be("");
            expect(data.hasCertificate).to.be.a('boolean');
            // expect(data.hasCertificate).to.be(false);
            expect(data.certNumberMonthsValid).to.be.a('boolean');
            // expect(data.certNumberMonthsValid).to.be(false);
            expect(data.certRespPrecondition).to.be.a('number');
            // expect(data.certRespPrecondition).to.be(0);
            expect(data.certRespCourse).to.be.a('number');
            // expect(data.certRespCourse).to.be(0);
            expect(data.certRespParticipation).to.be.a('number');
            // expect(data.certRespParticipation).to.be(0);
            expect(data.certRespConfirmation).to.be.a('number');
            // expect(data.certRespConfirmation).to.be(0);
            expect(data.inPlanning).to.be.a('number');
            // expect(data.inPlanning).to.be(0);
            expect(data.planningDescription).to.be.a('string');
            // expect(data.planningDescription).to.be("");
            expect(data.bookableForInhouse).to.be.a('number');
            // expect(data.bookableForInhouse).to.be(0);
            expect(data.sendCertificateReminder).to.be.a('number');
            // expect(data.sendCertificateReminder).to.be(0);
            expect(data.daysUntilCertReminder).to.be.a('number');
            // expect(data.daysUntilCertReminder).to.be(0);
            expect(data.monthsForCertExtend).to.be.a('number');
            // expect(data.monthsForCertExtend).to.be(0);
            expect(data.certExtensionDate).to.be.a('number');
            // expect(data.certExtensionDate).to.be(0);
            expect(data.id).to.be.a('number');
            // expect(data.id).to.be(0);
            expect(data.foreignId).to.be.a('string');
            // expect(data.foreignId).to.be("");
            expect(data.language).to.be.a('number');
            // expect(data.language).to.be(0);
            expect(data.createDate).to.be.a('number');
            // expect(data.createDate).to.be(0);
            expect(data.changeDate).to.be.a('number');
            // expect(data.changeDate).to.be(0);
            expect(data.deleted).to.be.a('number');
            // expect(data.deleted).to.be(0);
            expect(data.hidden).to.be.a('number');
            // expect(data.hidden).to.be(0);
            expect(data.sorting).to.be.a('number');
            // expect(data.sorting).to.be(0);
            expect(data.tags).to.be.a('string');
            // expect(data.tags).to.be("");

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('seminarDelete', function() {
        it('should call seminarDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for seminarDelete call and complete the assertions
          /*
          var id = 56;

          instance.seminarDelete(id).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SeminarCatalogApi.Seminar);
            {
              let dataCtr = data.syncFields;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                // expect(data).to.be("");
              }
            }
            expect(data.identifier).to.be.a('string');
            // expect(data.identifier).to.be("");
            expect(data.title).to.be.a('string');
            // expect(data.title).to.be("");
            expect(data.subtitle).to.be.a('string');
            // expect(data.subtitle).to.be("");
            expect(data.teaser).to.be.a('string');
            // expect(data.teaser).to.be("");
            expect(data.intro).to.be.a('string');
            // expect(data.intro).to.be("");
            expect(data.description).to.be.a('string');
            // expect(data.description).to.be("");
            expect(data.type).to.be.a('string');
            // expect(data.type).to.be("");
            expect(data.organizerInfo).to.be.a('string');
            // expect(data.organizerInfo).to.be("");
            expect(data.partnerInfo).to.be.a('string');
            // expect(data.partnerInfo).to.be("");
            expect(data.externalUrl).to.be.a('string');
            // expect(data.externalUrl).to.be("");
            expect(data.trainerInfo).to.be.a('string');
            // expect(data.trainerInfo).to.be("");
            expect(data.contactDetails).to.be.a('string');
            // expect(data.contactDetails).to.be("");
            expect(data.rolesVisibility).to.be.a('string');
            // expect(data.rolesVisibility).to.be("");
            expect(data.rolesBooking).to.be.a('string');
            // expect(data.rolesBooking).to.be("");
            expect(data.birthdateRequired).to.be.a('number');
            // expect(data.birthdateRequired).to.be(0);
            expect(data.birthplaceRequired).to.be.a('number');
            // expect(data.birthplaceRequired).to.be(0);
            expect(data.utNumberRequired).to.be.a('number');
            // expect(data.utNumberRequired).to.be(0);
            expect(data.hideInCatalog).to.be.a('number');
            // expect(data.hideInCatalog).to.be(0);
            expect(data.content).to.be.a('string');
            // expect(data.content).to.be("");
            expect(data.targetGroupInfo).to.be.a('string');
            // expect(data.targetGroupInfo).to.be("");
            expect(data.requirements).to.be.a('string');
            // expect(data.requirements).to.be("");
            expect(data.agenda).to.be.a('string');
            // expect(data.agenda).to.be("");
            expect(data.hints).to.be.a('string');
            // expect(data.hints).to.be("");
            expect(data.qualification).to.be.a('string');
            // expect(data.qualification).to.be("");
            expect(data.learningGoals).to.be.a('string');
            // expect(data.learningGoals).to.be("");
            expect(data.cvIsRequired).to.be.a('number');
            // expect(data.cvIsRequired).to.be(0);
            expect(data.coursePreparation).to.be.a('string');
            // expect(data.coursePreparation).to.be("");
            expect(data.certificateInfo).to.be.a('string');
            // expect(data.certificateInfo).to.be("");
            expect(data.instructorPotentialRole).to.be.a('number');
            // expect(data.instructorPotentialRole).to.be(0);
            expect(data.certificateTemplate).to.be.a('string');
            // expect(data.certificateTemplate).to.be("");
            expect(data.shippingInformation).to.be.a('string');
            // expect(data.shippingInformation).to.be("");
            expect(data.courseInformation1).to.be.a('string');
            // expect(data.courseInformation1).to.be("");
            expect(data.courseInformation2).to.be.a('string');
            // expect(data.courseInformation2).to.be("");
            expect(data.courseInformation3).to.be.a('string');
            // expect(data.courseInformation3).to.be("");
            expect(data.hasCertificate).to.be.a('boolean');
            // expect(data.hasCertificate).to.be(false);
            expect(data.certNumberMonthsValid).to.be.a('boolean');
            // expect(data.certNumberMonthsValid).to.be(false);
            expect(data.certRespPrecondition).to.be.a('number');
            // expect(data.certRespPrecondition).to.be(0);
            expect(data.certRespCourse).to.be.a('number');
            // expect(data.certRespCourse).to.be(0);
            expect(data.certRespParticipation).to.be.a('number');
            // expect(data.certRespParticipation).to.be(0);
            expect(data.certRespConfirmation).to.be.a('number');
            // expect(data.certRespConfirmation).to.be(0);
            expect(data.inPlanning).to.be.a('number');
            // expect(data.inPlanning).to.be(0);
            expect(data.planningDescription).to.be.a('string');
            // expect(data.planningDescription).to.be("");
            expect(data.bookableForInhouse).to.be.a('number');
            // expect(data.bookableForInhouse).to.be(0);
            expect(data.sendCertificateReminder).to.be.a('number');
            // expect(data.sendCertificateReminder).to.be(0);
            expect(data.daysUntilCertReminder).to.be.a('number');
            // expect(data.daysUntilCertReminder).to.be(0);
            expect(data.monthsForCertExtend).to.be.a('number');
            // expect(data.monthsForCertExtend).to.be(0);
            expect(data.certExtensionDate).to.be.a('number');
            // expect(data.certExtensionDate).to.be(0);
            expect(data.id).to.be.a('number');
            // expect(data.id).to.be(0);
            expect(data.foreignId).to.be.a('string');
            // expect(data.foreignId).to.be("");
            expect(data.language).to.be.a('number');
            // expect(data.language).to.be(0);
            expect(data.createDate).to.be.a('number');
            // expect(data.createDate).to.be(0);
            expect(data.changeDate).to.be.a('number');
            // expect(data.changeDate).to.be(0);
            expect(data.deleted).to.be.a('number');
            // expect(data.deleted).to.be(0);
            expect(data.hidden).to.be.a('number');
            // expect(data.hidden).to.be(0);
            expect(data.sorting).to.be.a('number');
            // expect(data.sorting).to.be(0);
            expect(data.tags).to.be.a('string');
            // expect(data.tags).to.be("");

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('seminarGet', function() {
        it('should call seminarGet successfully', function(done) {
          // TODO: uncomment, update parameter values for seminarGet call and complete the assertions
          /*
          var id = 56;

          instance.seminarGet(id).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SeminarCatalogApi.Seminar);
            {
              let dataCtr = data.syncFields;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                // expect(data).to.be("");
              }
            }
            expect(data.identifier).to.be.a('string');
            // expect(data.identifier).to.be("");
            expect(data.title).to.be.a('string');
            // expect(data.title).to.be("");
            expect(data.subtitle).to.be.a('string');
            // expect(data.subtitle).to.be("");
            expect(data.teaser).to.be.a('string');
            // expect(data.teaser).to.be("");
            expect(data.intro).to.be.a('string');
            // expect(data.intro).to.be("");
            expect(data.description).to.be.a('string');
            // expect(data.description).to.be("");
            expect(data.type).to.be.a('string');
            // expect(data.type).to.be("");
            expect(data.organizerInfo).to.be.a('string');
            // expect(data.organizerInfo).to.be("");
            expect(data.partnerInfo).to.be.a('string');
            // expect(data.partnerInfo).to.be("");
            expect(data.externalUrl).to.be.a('string');
            // expect(data.externalUrl).to.be("");
            expect(data.trainerInfo).to.be.a('string');
            // expect(data.trainerInfo).to.be("");
            expect(data.contactDetails).to.be.a('string');
            // expect(data.contactDetails).to.be("");
            expect(data.rolesVisibility).to.be.a('string');
            // expect(data.rolesVisibility).to.be("");
            expect(data.rolesBooking).to.be.a('string');
            // expect(data.rolesBooking).to.be("");
            expect(data.birthdateRequired).to.be.a('number');
            // expect(data.birthdateRequired).to.be(0);
            expect(data.birthplaceRequired).to.be.a('number');
            // expect(data.birthplaceRequired).to.be(0);
            expect(data.utNumberRequired).to.be.a('number');
            // expect(data.utNumberRequired).to.be(0);
            expect(data.hideInCatalog).to.be.a('number');
            // expect(data.hideInCatalog).to.be(0);
            expect(data.content).to.be.a('string');
            // expect(data.content).to.be("");
            expect(data.targetGroupInfo).to.be.a('string');
            // expect(data.targetGroupInfo).to.be("");
            expect(data.requirements).to.be.a('string');
            // expect(data.requirements).to.be("");
            expect(data.agenda).to.be.a('string');
            // expect(data.agenda).to.be("");
            expect(data.hints).to.be.a('string');
            // expect(data.hints).to.be("");
            expect(data.qualification).to.be.a('string');
            // expect(data.qualification).to.be("");
            expect(data.learningGoals).to.be.a('string');
            // expect(data.learningGoals).to.be("");
            expect(data.cvIsRequired).to.be.a('number');
            // expect(data.cvIsRequired).to.be(0);
            expect(data.coursePreparation).to.be.a('string');
            // expect(data.coursePreparation).to.be("");
            expect(data.certificateInfo).to.be.a('string');
            // expect(data.certificateInfo).to.be("");
            expect(data.instructorPotentialRole).to.be.a('number');
            // expect(data.instructorPotentialRole).to.be(0);
            expect(data.certificateTemplate).to.be.a('string');
            // expect(data.certificateTemplate).to.be("");
            expect(data.shippingInformation).to.be.a('string');
            // expect(data.shippingInformation).to.be("");
            expect(data.courseInformation1).to.be.a('string');
            // expect(data.courseInformation1).to.be("");
            expect(data.courseInformation2).to.be.a('string');
            // expect(data.courseInformation2).to.be("");
            expect(data.courseInformation3).to.be.a('string');
            // expect(data.courseInformation3).to.be("");
            expect(data.hasCertificate).to.be.a('boolean');
            // expect(data.hasCertificate).to.be(false);
            expect(data.certNumberMonthsValid).to.be.a('boolean');
            // expect(data.certNumberMonthsValid).to.be(false);
            expect(data.certRespPrecondition).to.be.a('number');
            // expect(data.certRespPrecondition).to.be(0);
            expect(data.certRespCourse).to.be.a('number');
            // expect(data.certRespCourse).to.be(0);
            expect(data.certRespParticipation).to.be.a('number');
            // expect(data.certRespParticipation).to.be(0);
            expect(data.certRespConfirmation).to.be.a('number');
            // expect(data.certRespConfirmation).to.be(0);
            expect(data.inPlanning).to.be.a('number');
            // expect(data.inPlanning).to.be(0);
            expect(data.planningDescription).to.be.a('string');
            // expect(data.planningDescription).to.be("");
            expect(data.bookableForInhouse).to.be.a('number');
            // expect(data.bookableForInhouse).to.be(0);
            expect(data.sendCertificateReminder).to.be.a('number');
            // expect(data.sendCertificateReminder).to.be(0);
            expect(data.daysUntilCertReminder).to.be.a('number');
            // expect(data.daysUntilCertReminder).to.be(0);
            expect(data.monthsForCertExtend).to.be.a('number');
            // expect(data.monthsForCertExtend).to.be(0);
            expect(data.certExtensionDate).to.be.a('number');
            // expect(data.certExtensionDate).to.be(0);
            expect(data.id).to.be.a('number');
            // expect(data.id).to.be(0);
            expect(data.foreignId).to.be.a('string');
            // expect(data.foreignId).to.be("");
            expect(data.language).to.be.a('number');
            // expect(data.language).to.be(0);
            expect(data.createDate).to.be.a('number');
            // expect(data.createDate).to.be(0);
            expect(data.changeDate).to.be.a('number');
            // expect(data.changeDate).to.be(0);
            expect(data.deleted).to.be.a('number');
            // expect(data.deleted).to.be(0);
            expect(data.hidden).to.be.a('number');
            // expect(data.hidden).to.be(0);
            expect(data.sorting).to.be.a('number');
            // expect(data.sorting).to.be(0);
            expect(data.tags).to.be.a('string');
            // expect(data.tags).to.be("");

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('seminarList', function() {
        it('should call seminarList successfully', function(done) {
          // TODO: uncomment seminarList call and complete the assertions
          /*

          instance.seminarList().then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SeminarCatalogApi.SeminarPaginationResult);
            expect(data.limit).to.be.a('number');
            // expect(data.limit).to.be(0);
            expect(data.offset).to.be.a('number');
            // expect(data.offset).to.be(0);
            expect(data.entryCount).to.be.a('number');
            // expect(data.entryCount).to.be(0);
            expect(data.maxEntryCount).to.be.a('number');
            // expect(data.maxEntryCount).to.be(0);
            {
              let dataCtr = data.entries;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(SeminarCatalogApi.Seminar);
                {
                  let dataCtr = data.syncFields;
                  expect(dataCtr).to.be.an(Array);
                  expect(dataCtr).to.not.be.empty();
                  for (let p in dataCtr) {
                    let data = dataCtr[p];
                    expect(data).to.be.a('string');
                    // expect(data).to.be("");
                  }
                }
                expect(data.identifier).to.be.a('string');
                // expect(data.identifier).to.be("");
                expect(data.title).to.be.a('string');
                // expect(data.title).to.be("");
                expect(data.subtitle).to.be.a('string');
                // expect(data.subtitle).to.be("");
                expect(data.teaser).to.be.a('string');
                // expect(data.teaser).to.be("");
                expect(data.intro).to.be.a('string');
                // expect(data.intro).to.be("");
                expect(data.description).to.be.a('string');
                // expect(data.description).to.be("");
                expect(data.type).to.be.a('string');
                // expect(data.type).to.be("");
                expect(data.organizerInfo).to.be.a('string');
                // expect(data.organizerInfo).to.be("");
                expect(data.partnerInfo).to.be.a('string');
                // expect(data.partnerInfo).to.be("");
                expect(data.externalUrl).to.be.a('string');
                // expect(data.externalUrl).to.be("");
                expect(data.trainerInfo).to.be.a('string');
                // expect(data.trainerInfo).to.be("");
                expect(data.contactDetails).to.be.a('string');
                // expect(data.contactDetails).to.be("");
                expect(data.rolesVisibility).to.be.a('string');
                // expect(data.rolesVisibility).to.be("");
                expect(data.rolesBooking).to.be.a('string');
                // expect(data.rolesBooking).to.be("");
                expect(data.birthdateRequired).to.be.a('number');
                // expect(data.birthdateRequired).to.be(0);
                expect(data.birthplaceRequired).to.be.a('number');
                // expect(data.birthplaceRequired).to.be(0);
                expect(data.utNumberRequired).to.be.a('number');
                // expect(data.utNumberRequired).to.be(0);
                expect(data.hideInCatalog).to.be.a('number');
                // expect(data.hideInCatalog).to.be(0);
                expect(data.content).to.be.a('string');
                // expect(data.content).to.be("");
                expect(data.targetGroupInfo).to.be.a('string');
                // expect(data.targetGroupInfo).to.be("");
                expect(data.requirements).to.be.a('string');
                // expect(data.requirements).to.be("");
                expect(data.agenda).to.be.a('string');
                // expect(data.agenda).to.be("");
                expect(data.hints).to.be.a('string');
                // expect(data.hints).to.be("");
                expect(data.qualification).to.be.a('string');
                // expect(data.qualification).to.be("");
                expect(data.learningGoals).to.be.a('string');
                // expect(data.learningGoals).to.be("");
                expect(data.cvIsRequired).to.be.a('number');
                // expect(data.cvIsRequired).to.be(0);
                expect(data.coursePreparation).to.be.a('string');
                // expect(data.coursePreparation).to.be("");
                expect(data.certificateInfo).to.be.a('string');
                // expect(data.certificateInfo).to.be("");
                expect(data.instructorPotentialRole).to.be.a('number');
                // expect(data.instructorPotentialRole).to.be(0);
                expect(data.certificateTemplate).to.be.a('string');
                // expect(data.certificateTemplate).to.be("");
                expect(data.shippingInformation).to.be.a('string');
                // expect(data.shippingInformation).to.be("");
                expect(data.courseInformation1).to.be.a('string');
                // expect(data.courseInformation1).to.be("");
                expect(data.courseInformation2).to.be.a('string');
                // expect(data.courseInformation2).to.be("");
                expect(data.courseInformation3).to.be.a('string');
                // expect(data.courseInformation3).to.be("");
                expect(data.hasCertificate).to.be.a('boolean');
                // expect(data.hasCertificate).to.be(false);
                expect(data.certNumberMonthsValid).to.be.a('boolean');
                // expect(data.certNumberMonthsValid).to.be(false);
                expect(data.certRespPrecondition).to.be.a('number');
                // expect(data.certRespPrecondition).to.be(0);
                expect(data.certRespCourse).to.be.a('number');
                // expect(data.certRespCourse).to.be(0);
                expect(data.certRespParticipation).to.be.a('number');
                // expect(data.certRespParticipation).to.be(0);
                expect(data.certRespConfirmation).to.be.a('number');
                // expect(data.certRespConfirmation).to.be(0);
                expect(data.inPlanning).to.be.a('number');
                // expect(data.inPlanning).to.be(0);
                expect(data.planningDescription).to.be.a('string');
                // expect(data.planningDescription).to.be("");
                expect(data.bookableForInhouse).to.be.a('number');
                // expect(data.bookableForInhouse).to.be(0);
                expect(data.sendCertificateReminder).to.be.a('number');
                // expect(data.sendCertificateReminder).to.be(0);
                expect(data.daysUntilCertReminder).to.be.a('number');
                // expect(data.daysUntilCertReminder).to.be(0);
                expect(data.monthsForCertExtend).to.be.a('number');
                // expect(data.monthsForCertExtend).to.be(0);
                expect(data.certExtensionDate).to.be.a('number');
                // expect(data.certExtensionDate).to.be(0);
                expect(data.id).to.be.a('number');
                // expect(data.id).to.be(0);
                expect(data.foreignId).to.be.a('string');
                // expect(data.foreignId).to.be("");
                expect(data.language).to.be.a('number');
                // expect(data.language).to.be(0);
                expect(data.createDate).to.be.a('number');
                // expect(data.createDate).to.be(0);
                expect(data.changeDate).to.be.a('number');
                // expect(data.changeDate).to.be(0);
                expect(data.deleted).to.be.a('number');
                // expect(data.deleted).to.be(0);
                expect(data.hidden).to.be.a('number');
                // expect(data.hidden).to.be(0);
                expect(data.sorting).to.be.a('number');
                // expect(data.sorting).to.be(0);
                expect(data.tags).to.be.a('string');
                // expect(data.tags).to.be("");
              }
            }

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('seminarUpdate', function() {
        it('should call seminarUpdate successfully', function(done) {
          // TODO: uncomment, update parameter values for seminarUpdate call and complete the assertions
          /*
          var id = 56;

          instance.seminarUpdate(id).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SeminarCatalogApi.Seminar);
            {
              let dataCtr = data.syncFields;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                // expect(data).to.be("");
              }
            }
            expect(data.identifier).to.be.a('string');
            // expect(data.identifier).to.be("");
            expect(data.title).to.be.a('string');
            // expect(data.title).to.be("");
            expect(data.subtitle).to.be.a('string');
            // expect(data.subtitle).to.be("");
            expect(data.teaser).to.be.a('string');
            // expect(data.teaser).to.be("");
            expect(data.intro).to.be.a('string');
            // expect(data.intro).to.be("");
            expect(data.description).to.be.a('string');
            // expect(data.description).to.be("");
            expect(data.type).to.be.a('string');
            // expect(data.type).to.be("");
            expect(data.organizerInfo).to.be.a('string');
            // expect(data.organizerInfo).to.be("");
            expect(data.partnerInfo).to.be.a('string');
            // expect(data.partnerInfo).to.be("");
            expect(data.externalUrl).to.be.a('string');
            // expect(data.externalUrl).to.be("");
            expect(data.trainerInfo).to.be.a('string');
            // expect(data.trainerInfo).to.be("");
            expect(data.contactDetails).to.be.a('string');
            // expect(data.contactDetails).to.be("");
            expect(data.rolesVisibility).to.be.a('string');
            // expect(data.rolesVisibility).to.be("");
            expect(data.rolesBooking).to.be.a('string');
            // expect(data.rolesBooking).to.be("");
            expect(data.birthdateRequired).to.be.a('number');
            // expect(data.birthdateRequired).to.be(0);
            expect(data.birthplaceRequired).to.be.a('number');
            // expect(data.birthplaceRequired).to.be(0);
            expect(data.utNumberRequired).to.be.a('number');
            // expect(data.utNumberRequired).to.be(0);
            expect(data.hideInCatalog).to.be.a('number');
            // expect(data.hideInCatalog).to.be(0);
            expect(data.content).to.be.a('string');
            // expect(data.content).to.be("");
            expect(data.targetGroupInfo).to.be.a('string');
            // expect(data.targetGroupInfo).to.be("");
            expect(data.requirements).to.be.a('string');
            // expect(data.requirements).to.be("");
            expect(data.agenda).to.be.a('string');
            // expect(data.agenda).to.be("");
            expect(data.hints).to.be.a('string');
            // expect(data.hints).to.be("");
            expect(data.qualification).to.be.a('string');
            // expect(data.qualification).to.be("");
            expect(data.learningGoals).to.be.a('string');
            // expect(data.learningGoals).to.be("");
            expect(data.cvIsRequired).to.be.a('number');
            // expect(data.cvIsRequired).to.be(0);
            expect(data.coursePreparation).to.be.a('string');
            // expect(data.coursePreparation).to.be("");
            expect(data.certificateInfo).to.be.a('string');
            // expect(data.certificateInfo).to.be("");
            expect(data.instructorPotentialRole).to.be.a('number');
            // expect(data.instructorPotentialRole).to.be(0);
            expect(data.certificateTemplate).to.be.a('string');
            // expect(data.certificateTemplate).to.be("");
            expect(data.shippingInformation).to.be.a('string');
            // expect(data.shippingInformation).to.be("");
            expect(data.courseInformation1).to.be.a('string');
            // expect(data.courseInformation1).to.be("");
            expect(data.courseInformation2).to.be.a('string');
            // expect(data.courseInformation2).to.be("");
            expect(data.courseInformation3).to.be.a('string');
            // expect(data.courseInformation3).to.be("");
            expect(data.hasCertificate).to.be.a('boolean');
            // expect(data.hasCertificate).to.be(false);
            expect(data.certNumberMonthsValid).to.be.a('boolean');
            // expect(data.certNumberMonthsValid).to.be(false);
            expect(data.certRespPrecondition).to.be.a('number');
            // expect(data.certRespPrecondition).to.be(0);
            expect(data.certRespCourse).to.be.a('number');
            // expect(data.certRespCourse).to.be(0);
            expect(data.certRespParticipation).to.be.a('number');
            // expect(data.certRespParticipation).to.be(0);
            expect(data.certRespConfirmation).to.be.a('number');
            // expect(data.certRespConfirmation).to.be(0);
            expect(data.inPlanning).to.be.a('number');
            // expect(data.inPlanning).to.be(0);
            expect(data.planningDescription).to.be.a('string');
            // expect(data.planningDescription).to.be("");
            expect(data.bookableForInhouse).to.be.a('number');
            // expect(data.bookableForInhouse).to.be(0);
            expect(data.sendCertificateReminder).to.be.a('number');
            // expect(data.sendCertificateReminder).to.be(0);
            expect(data.daysUntilCertReminder).to.be.a('number');
            // expect(data.daysUntilCertReminder).to.be(0);
            expect(data.monthsForCertExtend).to.be.a('number');
            // expect(data.monthsForCertExtend).to.be(0);
            expect(data.certExtensionDate).to.be.a('number');
            // expect(data.certExtensionDate).to.be(0);
            expect(data.id).to.be.a('number');
            // expect(data.id).to.be(0);
            expect(data.foreignId).to.be.a('string');
            // expect(data.foreignId).to.be("");
            expect(data.language).to.be.a('number');
            // expect(data.language).to.be(0);
            expect(data.createDate).to.be.a('number');
            // expect(data.createDate).to.be(0);
            expect(data.changeDate).to.be.a('number');
            // expect(data.changeDate).to.be(0);
            expect(data.deleted).to.be.a('number');
            // expect(data.deleted).to.be(0);
            expect(data.hidden).to.be.a('number');
            // expect(data.hidden).to.be(0);
            expect(data.sorting).to.be.a('number');
            // expect(data.sorting).to.be(0);
            expect(data.tags).to.be.a('string');
            // expect(data.tags).to.be("");

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
